dist: trusty
sudo: required

language: go

go:
  - 1.8.x

services:
  - mysql
  - docker

env:
  global:
    - MYSQL_USER="root"
    - MYSQL_HOST="127.0.0.1"
    - MYSQL_PORT="3406"
    - PCT_TEST_MYSQL_DSN="${MYSQL_USER}@tcp(${MYSQL_HOST}:${MYSQL_PORT})/?parseTime=true"
  matrix:
    - MYSQL_IMAGE=mysql:5.5
    - MYSQL_IMAGE=mysql:5.6
    - MYSQL_IMAGE=mysql:5.7
    - MYSQL_IMAGE=percona/percona-server:5.6
    - MYSQL_IMAGE=percona/percona-server:5.7
    - MYSQL_IMAGE=mariadb:5.5
    - MYSQL_IMAGE=mariadb:10.0
    - MYSQL_IMAGE=mariadb:10.1
    - MONGODB_IMAGE=mongo:3.2
    - MONGODB_IMAGE=mongo:3.4
    - MONGODB_IMAGE=percona/percona-server-mongodb:3.2
    - MONGODB_IMAGE=percona/percona-server-mongodb:3.4

matrix:
  include:
    - go: 1.7.x
      env:
    - go: tip
      env:

addons:
  apt:
    sources:
      - sourceline: "deb http://repo.percona.com/apt $(lsb_release -s -c) testing"
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x8507EFA5'
    packages:
      - percona-toolkit

install:
  - go get -u github.com/Masterminds/glide
  # remove vendor dir and re-fetch it to check later if it's correct with `git diff --exit-code`
  - rm -rf vendor/
  - glide install

before_script:
  # run docker containers
  - docker-compose up -d
  # check if vendor dir is correct
  - git diff --exit-code
  # turn on profiling on mongo instance
  - mongo --eval 'db.setProfilingLevel(2)'
  - mongo --eval 'db.adminCommand( { listDatabases: 1, nameOnly: true} )'
  # wait for MySQL to become available
  - |
    until mysql -u"${MYSQL_USER}" -h "${MYSQL_HOST}" -P "${MYSQL_PORT}" -e 'SELECT 1' > /dev/null; do
      >&2 echo "MySQL ${MYSQL_HOST}:${MYSQL_PORT} for user ${MYSQL_USER} is unavailable - sleeping"
      sleep 1
    done
    >&2 echo "MySQL ${MYSQL_HOST}:${MYSQL_PORT} is up"
  # log versions
  - docker --version
  - docker-compose --version
  - docker-compose exec mysql mysql --version
  - docker-compose exec mongo mongo --version

script:
  - test/runner.sh

notifications:
  email:
    on_success: change
    on_failure: change
  slack:
    on_success: change
    on_failure: change
    rooms:
      secure: A/jke9SzibxoGc0H86z5fnGKoLr6xTPBNUcjLMVJ2xzqp8HX90gOdWKenooCu6tyJ0gXX8nUgIOQWsupICy2P2HPGXXKonY4Lq1qRPbxXnlqweaoTf2IZ8SmQeyP6TvNZF9978YRLqRBmJXzq7dcZCF2Gr/1XLPDCNIVJcKgG+heVUubt6q8EnIzB4OYKwUJwZ2ORzleLwqzs8ViB5ffmOXmAVd80rUTcCOailKE4+ML+CQO1MLbGxbdVjacivjM0cvXoibRZF5bhUsg7qoszaWJidJjX9UtW9rRKyPuh1vh1HFgayxmWNeiqe7yyIwGZU37Gnten+4XsVpKYxSOfRWz8TNu01jdDs7e8RgJ29OCwVG88y/yxrBtDlhjsKvy7owV1eAH63YVUJzgoVQZKUt04LAKTMxjEZKBb7o7+GdmSHQWPj8NNmcPEWBwSg99yU3xTQXefgLjqiCQTTNaiNEa1JgPNroKXzAcjJ12qpY5F5MWPFZ2ndTOL2kVEn4iqV7t6bresISXAZKJn+IrjUdZ+ZBr48zcnO7rgWGvszScDWt3oqjRlCbwxXWTL8VoDouylGVAJTUHxo07Bs307cwYiLsUp/2hPvcY2ELXrQXTqk3ZHJkMHa4U+nNvXY9RYNNqFmvAnUCHG6JfBda4b0SCjbCINjQVMCsF5DSXua8=
